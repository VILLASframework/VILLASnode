// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef XHLS_DFT_H
#define XHLS_DFT_H

#ifdef __cplusplus
extern "C" {
#endif

/***************************** Include Files *********************************/
#include "xil_types.h"
#include "xil_assert.h"
#include "xstatus.h"
#include "xil_io.h"
#include "xhls_dft_hw.h"

/**************************** Type Definitions ******************************/
typedef struct {
    u16 DeviceId;
    u32 Ctrl_BaseAddress;
} XHls_dft_Config;

typedef struct {
    u32 Ctrl_BaseAddress;
    u32 IsReady;
} XHls_dft;

/***************** Macros (Inline Functions) Definitions *********************/
#define XHls_dft_WriteReg(BaseAddress, RegOffset, Data) \
    Xil_Out32((BaseAddress) + (RegOffset), (u32)(Data))
#define XHls_dft_ReadReg(BaseAddress, RegOffset) \
    Xil_In32((BaseAddress) + (RegOffset))

/************************** Function Prototypes *****************************/
int XHls_dft_Initialize(XHls_dft *InstancePtr, u16 DeviceId);
XHls_dft_Config* XHls_dft_LookupConfig(u16 DeviceId);
int XHls_dft_CfgInitialize(XHls_dft *InstancePtr, XHls_dft_Config *ConfigPtr);

void XHls_dft_Start(XHls_dft *InstancePtr);
u32 XHls_dft_IsDone(XHls_dft *InstancePtr);
u32 XHls_dft_IsIdle(XHls_dft *InstancePtr);
u32 XHls_dft_IsReady(XHls_dft *InstancePtr);
void XHls_dft_EnableAutoRestart(XHls_dft *InstancePtr);
void XHls_dft_DisableAutoRestart(XHls_dft *InstancePtr);

void XHls_dft_Set_num_harmonics_V(XHls_dft *InstancePtr, u32 Data);
u32 XHls_dft_Get_num_harmonics_V(XHls_dft *InstancePtr);
void XHls_dft_Set_decimation_V(XHls_dft *InstancePtr, u32 Data);
u32 XHls_dft_Get_decimation_V(XHls_dft *InstancePtr);
u32 XHls_dft_Get_fharmonics_BaseAddress(XHls_dft *InstancePtr);
u32 XHls_dft_Get_fharmonics_HighAddress(XHls_dft *InstancePtr);
u32 XHls_dft_Get_fharmonics_TotalBytes(XHls_dft *InstancePtr);
u32 XHls_dft_Get_fharmonics_BitWidth(XHls_dft *InstancePtr);
u32 XHls_dft_Get_fharmonics_Depth(XHls_dft *InstancePtr);
u32 XHls_dft_Write_fharmonics_Words(XHls_dft *InstancePtr, int offset, int *data, int length);
u32 XHls_dft_Read_fharmonics_Words(XHls_dft *InstancePtr, int offset, int *data, int length);
u32 XHls_dft_Write_fharmonics_Bytes(XHls_dft *InstancePtr, int offset, char *data, int length);
u32 XHls_dft_Read_fharmonics_Bytes(XHls_dft *InstancePtr, int offset, char *data, int length);

void XHls_dft_InterruptGlobalEnable(XHls_dft *InstancePtr);
void XHls_dft_InterruptGlobalDisable(XHls_dft *InstancePtr);
void XHls_dft_InterruptEnable(XHls_dft *InstancePtr, u32 Mask);
void XHls_dft_InterruptDisable(XHls_dft *InstancePtr, u32 Mask);
void XHls_dft_InterruptClear(XHls_dft *InstancePtr, u32 Mask);
u32 XHls_dft_InterruptGetEnabled(XHls_dft *InstancePtr);
u32 XHls_dft_InterruptGetStatus(XHls_dft *InstancePtr);

#ifdef __cplusplus
}
#endif

#endif
