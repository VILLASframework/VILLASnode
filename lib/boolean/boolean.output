Grammatik

    0 $accept: input $end

    1 input: %empty
    2      | exp '\n'

    3 exp: comp
    4    | exp '&' exp
    5    | exp '|' exp
    6    | exp '^' exp
    7    | '~' exp
    8    | '(' exp ')'

    9 comp: CONSTANT
   10     | TOKEN


Terminale und die Regeln, in denen sie verwendet werden

$end (0) 0
'\n' (10) 2
'&' (38) 4
'(' (40) 8
')' (41) 8
'^' (94) 6
'|' (124) 5
'~' (126) 7
error (256)
TOKEN (258) 10
CONSTANT (259) 9
NEG (260)


Nicht-Terminal und die Regeln, in denen sie verwendet werden

$accept (13)
    auf der linken Seite: 0
input (14)
    auf der linken Seite: 1 2, auf der rechten Seite: 0
exp (15)
    auf der linken Seite: 3 4 5 6 7 8, auf der rechten Seite: 2 4 5
    6 7 8
comp (16)
    auf der linken Seite: 9 10, auf der rechten Seite: 3


Zustand 0

    0 $accept: . input $end

    TOKEN     schiebe und gehe zu Zustand 1 über
    CONSTANT  schiebe und gehe zu Zustand 2 über
    '~'       schiebe und gehe zu Zustand 3 über
    '('       schiebe und gehe zu Zustand 4 über

    $default  reduziere mit Regel 1 (input)

    input  gehe zu Zustand 5 über
    exp    gehe zu Zustand 6 über
    comp   gehe zu Zustand 7 über


Zustand 1

   10 comp: TOKEN .

    $default  reduziere mit Regel 10 (comp)


Zustand 2

    9 comp: CONSTANT .

    $default  reduziere mit Regel 9 (comp)


Zustand 3

    7 exp: '~' . exp

    TOKEN     schiebe und gehe zu Zustand 1 über
    CONSTANT  schiebe und gehe zu Zustand 2 über
    '~'       schiebe und gehe zu Zustand 3 über
    '('       schiebe und gehe zu Zustand 4 über

    exp   gehe zu Zustand 8 über
    comp  gehe zu Zustand 7 über


Zustand 4

    8 exp: '(' . exp ')'

    TOKEN     schiebe und gehe zu Zustand 1 über
    CONSTANT  schiebe und gehe zu Zustand 2 über
    '~'       schiebe und gehe zu Zustand 3 über
    '('       schiebe und gehe zu Zustand 4 über

    exp   gehe zu Zustand 9 über
    comp  gehe zu Zustand 7 über


Zustand 5

    0 $accept: input . $end

    $end  schiebe und gehe zu Zustand 10 über


Zustand 6

    2 input: exp . '\n'
    4 exp: exp . '&' exp
    5    | exp . '|' exp
    6    | exp . '^' exp

    '&'   schiebe und gehe zu Zustand 11 über
    '|'   schiebe und gehe zu Zustand 12 über
    '^'   schiebe und gehe zu Zustand 13 über
    '\n'  schiebe und gehe zu Zustand 14 über


Zustand 7

    3 exp: comp .

    $default  reduziere mit Regel 3 (exp)


Zustand 8

    4 exp: exp . '&' exp
    5    | exp . '|' exp
    6    | exp . '^' exp
    7    | '~' exp .

    $default  reduziere mit Regel 7 (exp)


Zustand 9

    4 exp: exp . '&' exp
    5    | exp . '|' exp
    6    | exp . '^' exp
    8    | '(' exp . ')'

    '&'  schiebe und gehe zu Zustand 11 über
    '|'  schiebe und gehe zu Zustand 12 über
    '^'  schiebe und gehe zu Zustand 13 über
    ')'  schiebe und gehe zu Zustand 15 über


Zustand 10

    0 $accept: input $end .

    $default  annehmen


Zustand 11

    4 exp: exp '&' . exp

    TOKEN     schiebe und gehe zu Zustand 1 über
    CONSTANT  schiebe und gehe zu Zustand 2 über
    '~'       schiebe und gehe zu Zustand 3 über
    '('       schiebe und gehe zu Zustand 4 über

    exp   gehe zu Zustand 16 über
    comp  gehe zu Zustand 7 über


Zustand 12

    5 exp: exp '|' . exp

    TOKEN     schiebe und gehe zu Zustand 1 über
    CONSTANT  schiebe und gehe zu Zustand 2 über
    '~'       schiebe und gehe zu Zustand 3 über
    '('       schiebe und gehe zu Zustand 4 über

    exp   gehe zu Zustand 17 über
    comp  gehe zu Zustand 7 über


Zustand 13

    6 exp: exp '^' . exp

    TOKEN     schiebe und gehe zu Zustand 1 über
    CONSTANT  schiebe und gehe zu Zustand 2 über
    '~'       schiebe und gehe zu Zustand 3 über
    '('       schiebe und gehe zu Zustand 4 über

    exp   gehe zu Zustand 18 über
    comp  gehe zu Zustand 7 über


Zustand 14

    2 input: exp '\n' .

    $default  reduziere mit Regel 2 (input)


Zustand 15

    8 exp: '(' exp ')' .

    $default  reduziere mit Regel 8 (exp)


Zustand 16

    4 exp: exp . '&' exp
    4    | exp '&' exp .
    5    | exp . '|' exp
    6    | exp . '^' exp

    $default  reduziere mit Regel 4 (exp)


Zustand 17

    4 exp: exp . '&' exp
    5    | exp . '|' exp
    5    | exp '|' exp .
    6    | exp . '^' exp

    $default  reduziere mit Regel 5 (exp)


Zustand 18

    4 exp: exp . '&' exp
    5    | exp . '|' exp
    6    | exp . '^' exp
    6    | exp '^' exp .

    $default  reduziere mit Regel 6 (exp)
