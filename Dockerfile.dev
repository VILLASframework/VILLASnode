# Dockerfile for VILLASnode development.
#
# This Dockerfile builds an image which contains all library dependencies
# and tools to build VILLASnode.
# However, VILLASnode itself it not part of the image.
#
# This image can be used for developing VILLASnode
# by running:
#   make docker
#
# @author Steffen Vogel <stvogel@eonerc.rwth-aachen.de>
# @copyright 2017, Institute for Automation of Complex Power Systems, EONERC
# @license GNU General Public License (version 3)
#
# VILLASnode
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
###################################################################################

FROM fedora:latest
MAINTAINER Steffen Vogel <stvogel@eonerc.rwth-aachen.de>

# Toolchain
RUN dnf -y install \
	gcc gcc-c++ \
	pkgconfig make cmake \
	autoconf automake autogen libtool \
	flex bison \
	texinfo git

# Dependencies
RUN dnf -y install \
	openssl openssl-devel \
	libconfig-devel \
	libnl3-devel \
	libcurl-devel \
	jansson-devel \
	libsodium-devel \
	openpgm-devel

# Several tools only needed for developement and testing
RUN dnf -y install \
	doxygen dia graphviz \
	openssh-clients \
	rpmdevtools rpm-build \
	jq \
	iproute \
	python-pip \
	valgrind \
	gdb \
	xmlto rubygem-asciidoctor

# 32bit versions of some standard libraries for RT-LAB code
RUN dnf -y install \
	libstdc++-devel.i686 \
	libuuid-devel.i686 \
	glibc-devel.i686

# Tools for debugging, coverage, profiling
RUN pip install \
        gcovr

# Build & Install libxil
COPY thirdparty/libxil /tmp/libxil
RUN mkdir -p /tmp/libxil/build && cd /tmp/libxil/build && cmake -DLIB_SUFFIX=64 .. && make install

# Build & Install Criterion
COPY thirdparty/criterion /tmp/criterion
RUN mkdir -p /tmp/criterion/build && cd /tmp/criterion/build && cmake -DCMAKE_INSTALL_LIBDIR=/usr/local/lib64 .. && make install

# Build & Install libwebsockets
COPY thirdparty/libwebsockets /tmp/libwebsockets
RUN mkdir -p /tmp/libwebsockets/build && cd /tmp/libwebsockets/build && cmake -DLWS_IPV6=1 -DLWS_WITH_STATIC=0 -DLWS_WITHOUT_TESTAPPS=1 -DLWS_WITH_HTTP2=1 -DLIB_SUFFIX=64 .. && make install

# Build & Install libiec61850
COPY thirdparty/libiec61850 /tmp/libiec61850
RUN mkdir -p /tmp/libiec61850/build && cd /tmp/libiec61850/build && cmake -DBUILD_EXAMPLES=0 -DBUILD_PYTHON_BINDINGS=0 .. && make install

# Build & Install nanomsg
COPY thirdparty/nanomsg /tmp/nanomsg
RUN mkdir -p /tmp/nanomsg/build && cd /tmp/nanomsg/build && cmake .. && make install

# Build & Install libzmq
COPY thirdparty/libzmq /tmp/libzmq
RUN cd /tmp/libzmq && autoreconf -fi && ./configure --with-libsodium --with-pgm --enable-drafts && make install

# Cleanup intermediate files from builds
RUN rm -rf /tmp/*

# Expose ports for HTTP and WebSocket frontend
EXPOSE 80
EXPOSE 443

ENV PKG_CONFIG_PATH /usr/local/lib/pkgconfig:/usr/local/lib64/pkgconfig
ENV LD_LIBRARY_PATH /usr/local/lib:/usr/local/lib64

#ADD https://villas.fein-aachen.org/packages/villas.repo /etc/yum.repos.d/

ENTRYPOINT villas
WORKDIR /villas
ENTRYPOINT bash
