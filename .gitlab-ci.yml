variables:
  # This registry is a linked docker container running on the same host
  # and configured in gitlab-ci-runner config.toml as a linked service
  DOCKER_REGISTRY: acs-public:5000
  DOCKER_IMAGE: villas:latest
  PREFIX: /usr/

stages:
  - prepare
  - build
  - test
  - deploy

# Stage: prepare
##############################################################################

# Build docker image which is used to build & test VILLASnode
docker-image:
  stage: prepare
  # Must match the docker version on the build machine!
  before_script:
    - git submodule sync --recursive
    - git submodule update --recursive --init
    - docker info
  script:
    - docker build -t $DOCKER_REGISTRY/$DOCKER_IMAGE .
    - docker push $DOCKER_REGISTRY/$DOCKER_IMAGE
  tags:
    - shell
    - linux

# Stage: build
##############################################################################

build:
  stage: build
  script:
    - make install
  artifacts:
    name: "${CI_PROJECT_NAME}-${CI_BUILD_REF}"
    paths:
      - build/release/
  image: $DOCKER_REGISTRY/$DOCKER_IMAGE
  tags:
    - docker

docs:
  stage: build
  artifacts:
    name: "${CI_PROJECT_NAME}-doc-${CI_BUILD_REF}"
    paths:
      - build/release/doc/
  script:
    - make doc
  image: $DOCKER_REGISTRY/$DOCKER_IMAGE
  tags:
    - docker


# Stage: test
##############################################################################

coverage:
  stage: test
  script:
    - make coverage COVERAGE=1
  artifacts:
    name: "${CI_PROJECT_NAME}-coverage-${CI_BUILD_REF}"
    paths:
      - build/release-coverage/coverage/
      - build/release-coverage/coverage.txt
      - build/release-coverage/coverage.xml
  image: $DOCKER_REGISTRY/$DOCKER_IMAGE
  tags:
    - docker

unit:
  stage: test
  dependencies:
    - build
  script:
    - make run-tests
  image: $DOCKER_REGISTRY/$DOCKER_IMAGE
  tags:
    - docker

integration:
  stage: test
  dependencies:
    - build
  script:
    - "build/release/villas-node || true"
  image: $DOCKER_REGISTRY/$DOCKER_IMAGE
  tags:
    - docker


# Stage: deliver
##############################################################################

website:
  stage: deploy
  script:
    - rsync -r web/ $DEPLOY_PATH/
  only:
    - develop
  tags:
    - villas-deploy

deliver:
  stage: deploy
  script:
    - rsync -r build/release/doc/html/ $DEPLOY_PATH/doc/$CI_BUILD_REF_NAME/
    - rsync -r build/release-coverage/coverage/ $DEPLOY_PATH/coverage/$CI_BUILD_REF_NAME/
  dependencies:
   - docs
   - coverage
  tags:
    - villas-deploy

